/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/js/basketComponent.js":
/*!**************************************!*\
  !*** ./public/js/basketComponent.js ***!
  \**************************************/
/***/ (() => {

eval("Vue.component('cart', {\r\n    data() {\r\n        return {           \r\n            cartItems: [],            \r\n            showCart: false\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$parent.getJson(`/api/cart`)\r\n            .then(outcome => {\r\n                for (let el of outcome.contents) {\r\n                    this.cartItems.push(el);\r\n                }\r\n            });\r\n    },\r\n    methods: {\r\n        addProduct(product) {\r\n            let find = this.cartItems.find(el => el.id_product === product.id_product);\r\n            if(find) {\r\n                this.$parent.putJson(`/api/cart/${product.id_product}`, {quantity: 1})\r\n                    .then(outcome => {\r\n                        if (outcome.result) {\r\n                            find.quantity++;\r\n                        }\r\n                    })\r\n            } else {\r\n                let prod = Object.assign({ quantity: 1 }, product);\r\n                this.$parent.postJson(`/api/cart/`, prod)\r\n                    .then(outcome => {\r\n                        if(outcome.result) {\r\n                            this.cartItems.push(prod);\r\n                        }\r\n                    })\r\n            }                \r\n        },\r\n        remove(product){\r\n            if (product.quantity > 1) {\r\n                this.$parent.putJson(`/api/cart/${product.id_product}`, {quantity: -1})\r\n                    .then( data => {\r\n                        if (data.result) {\r\n                            product.quantity--;\r\n                        }\r\n                    })\r\n            } else {\r\n                this.$parent.deleteJson(`/api/cart/${product.id_product}`, product)\r\n                    .then( data => {\r\n                        if (data.result) {\r\n                            this.cartItems.splice(this.cartItems.indexOf(product), 1);\r\n                        } else {\r\n                            console.log('error');\r\n                        }\r\n                    } )\r\n            }\r\n        },\r\n    },\r\n    template: `\r\n            <div>\r\n                <button class=\"btn-cart\" type=\"button\" @click=\"showCart = !showCart\">Корзина</button>\r\n                <p v-if=\"cartItems.length == 0\" class=\"empty-bask\">Корзина пуста</p>\r\n                <p v-else=\"cartItems.length\" class=\"empty-bask\">В корзине есть товары</p>\r\n                <div class=\"cart\" v-show=\"showCart\">                                   \r\n                    <cart-item v-for=\"item of cartItems\" \r\n                        :key=\"item.id_product\"\r\n                        :img=\"item.imgCart\"\r\n                        :cart-item=\"item\"                                                                            \r\n                        @remove=\"remove\"></cart-item>\r\n                </div>\r\n            </div>\r\n            `\r\n});\r\n\r\nVue.component('cart-item', {\r\n    props: ['cartItem', 'img'],\r\n    template: `\r\n            <div class=\"cart-item\">\r\n                <img class=\"cart-img-product\" :src=\"img\" alt=\"Картинка\">\r\n                <p class=\"cart-title-product\">{{ cartItem.product_name }}</p>\r\n                <p class=\"cart-price-product\">цена: {{ cartItem.price }} у.е.</p>\r\n                <p class=\"cart-quantity-product\">количество: {{ cartItem.quantity }} шт.</p>\r\n                <p class=\"product-sum\">Итого: {{ cartItem.quantity * cartItem.price }} у.е.</p>\r\n                <button class=\"delete\" @click=\"$emit('remove', cartItem)\">Удалить</button>\r\n            </div>\r\n            `\r\n})\r\n\r\n// Vue.component('basket', {\r\n//     props: ['basketItem', 'img', 'visibility'],\r\n//     template: `\r\n        // <div class=\"basket\" v-show=\"visibility\">\r\n        //     <basket-prod v-for=\"thing of basketItem\" :key=\"thing.id_product\" :img=\"img\" :basket-prod=\"thing\">\r\n        //     </basket-prod>\r\n        // </div>\r\n//     `\r\n// });\r\n\r\n// Vue.component('basket-prod', {\r\n//     props: ['img', 'basketProd'],\r\n//     template: `\r\n//         <div class=\"basket-product\">\r\n//             <img class=\"basket-img-product\" :src=\"img\" alt=\"Картинка\">\r\n//             <p class=\"basket-title-product\">{{ basketProd.product_name }}</p>\r\n//             <p class=\"basket-price-product\">цена: {{ basketProd.price }} у.е.</p>\r\n//             <p class=\"basket-quantity-product\">количество: {{ basketProd.quantity }} шт.</p>\r\n//             <p class=\"product-sum\">Итого: {{ basketProd.quantity * basketProd.price }} у.е.</p>\r\n//             <button class=\"delete\" @click=\"$root.delItem(basketProd)\">Удалить</button>\r\n//         </div>\r\n//     `\r\n// })\r\n\n\n//# sourceURL=webpack://java_script_project/./public/js/basketComponent.js?");

/***/ }),

/***/ "./public/js/errorComponent.js":
/*!*************************************!*\
  !*** ./public/js/errorComponent.js ***!
  \*************************************/
/***/ (() => {

eval("Vue.component('error', {\r\n    data() {\r\n        return {\r\n            text: ''\r\n        }\r\n    },\r\n    methods: {\r\n        comeText(value){\r\n            this.text = value;\r\n        }\r\n    },\r\n    template: `\r\n        <div class=\"err\" v-if=\"text\">\r\n            <p><button class=\"close-btn\" @click=\"comeText('')\">&times;</button>\r\n            {{ text }}\r\n            </p>\r\n        </div>`\r\n});\r\n\r\n// data() {\r\n//     return {\r\n//         message: 'СЕРВЕР НЕ ДОСТУПЕН!'\r\n//     }\r\n// },\r\n// template:`\r\n//     <div>\r\n//         <div>\r\n//             <h2 class=\"err\">{{ message }}</h2>\r\n//         </div>\r\n//     </div>`\r\n\n\n//# sourceURL=webpack://java_script_project/./public/js/errorComponent.js?");

/***/ }),

/***/ "./public/js/main.js":
/*!***************************!*\
  !*** ./public/js/main.js ***!
  \***************************/
/***/ (() => {

eval("const API = 'https://raw.githubusercontent.com/GeekBrainsTutorial/online-store-api/master/responses';\r\n\r\nconst app = new Vue({\r\n    el: \"#app\",\r\n    data: {        \r\n        title: 'Мой магазин',\r\n        copyRight: \"Copyright \t© \" + new Date().getFullYear() + \". All rights reserved.\",\r\n        // userSearch: '',\r\n    },\r\n    methods: {\r\n        getJson(url){\r\n            return fetch(url)\r\n            .then(outcome => outcome.json())\r\n            .catch(error => {this.$refs.error.comeText = error;\r\n            })\r\n        },\r\n        postJson(url, data){\r\n            return fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {this.$refs.error.comeText = error;\r\n                })\r\n        },\r\n        putJson(url, data){\r\n            return fetch(url, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {this.$refs.error.comeText = error;\r\n                })\r\n        },\r\n        deleteJson(url, data){\r\n            return fetch(url, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(result => result.json())\r\n                .catch(error => {this.$refs.error.comeText = error;\r\n                })\r\n        },      \r\n    },    \r\n});\r\n\r\n\r\n    // data: {\r\n    //     title: 'Мой магазин',\r\n    //     show: false,\r\n    //     catalogUrl: '/catalogData.json',\r\n    //     items: [],\r\n    //     sieve: [],\r\n    //     imgCatalog: 'img/zz.jpg',\r\n    //     userSearch: '',\r\n    //     basketUrl: '/getBasket.json',\r\n    //     basketItem: [],\r\n    //     copyRight: \"Copyright \t© \" + new Date().getFullYear() + \". All rights reserved.\",\r\n    //     error: false\r\n    // },\r\n\r\n    // methods: {\r\n        // separation() {\r\n        //     let findIt = new RegExp(this.userSearch, 'i');\r\n        //     this.sieve = this.items.filter(prod => findIt.test(prod.product_name));\r\n        // },\r\n    //     _getJson(url) {\r\n    //         return fetch(url)\r\n    //             .then(outcome => outcome.json())\r\n    //             .catch(mistacke => {\r\n    //                 console.log(mistacke);\r\n    //                 this.error = true;\r\n    //             })\r\n    //     },\r\n        // addProduct(thing) {\r\n        //     this._getJson(`${API}/addToBasket.json`)\r\n        //         .then(outcome => {\r\n        //             if (outcome.result === 1) {\r\n        //                 let find = this.basketItem.find(product => product.id_product === thing.id_product);\r\n        //                 if (find) {\r\n        //                     find.quantity++;\r\n        //                 } else {\r\n        //                     let newThing = Object.assign({ quantity: 1 }, thing);\r\n        //                     this.basketItem.push(newThing)\r\n        //                 }\r\n        //             }\r\n        //         })\r\n        // },\r\n        // delItem(thing) {\r\n        //     this._getJson(`${API}/addToBasket.json`)\r\n        //         .then(outcome => {\r\n        //             if (outcome.result === 1) {\r\n        //                 if (thing.quantity > 1) {\r\n        //                     thing.quantity--;\r\n        //                 } else {\r\n        //                     this.basketItem.splice(this.basketItem.indexOf(thing), 1);\r\n        //                 }\r\n        //             }\r\n        //         })\r\n        // },\r\n    // },\r\n    // mounted() {\r\n    //     this._getJson(`${API + this.catalogUrl}`)\r\n            // .then(outcome => {\r\n            //     for (let el of outcome) {\r\n            //         this.items.push(el);\r\n            //         this.sieve.push(el);\r\n            //     }\r\n    //         });\r\n    //     this._getJson(`getProducts.json`)\r\n    //         .then(outcome => {\r\n    //             for (let el of outcome) {\r\n    //                 this.items.push(el);\r\n    //                 this.sieve.push(el);\r\n    //             }\r\n    //         });\r\n    //     this._getJson(`${API + this.basketUrl}`)\r\n    //         .then(outcome => {\r\n    //             for (let el of outcome.contents) {\r\n    //                 this.basketItem.push(el);\r\n    //             }\r\n    //         });\r\n    // },\r\n\n\n//# sourceURL=webpack://java_script_project/./public/js/main.js?");

/***/ }),

/***/ "./public/js/productComponent.js":
/*!***************************************!*\
  !*** ./public/js/productComponent.js ***!
  \***************************************/
/***/ (() => {

eval("Vue.component('products', {\r\n    data() {\r\n        return {\r\n            catalogUrl: '/catalogData.json',\r\n            filtered: [],\r\n            products: [],                   \r\n        }\r\n    },\r\n    mounted() {\r\n        this.$parent.getJson(`/api/products`)\r\n            .then(outcome => {\r\n                for (let el of outcome) {\r\n                    this.filtered.push(el);\r\n                    this.products.push(el);\r\n                }\r\n            });\r\n    },\r\n    methods: {\r\n        filter(value) {\r\n            let findIt = new RegExp(value, 'i');\r\n            this.filtered = this.products.filter(prod => findIt.test(prod.product_name));\r\n        }\r\n    },\r\n    template: `\r\n            <div class=\"products\">\r\n                <product-item v-for=\"item of filtered\"\r\n                    :key=\"item.id_product\"\r\n                    :img=\"item.imgCart\"\r\n                    :product-item=\"item\"></product-item>                    \r\n            </div>                \r\n            `\r\n});\r\n\r\nVue.component('product-item', {\r\n    props: ['productItem', 'img'],\r\n    template: `\r\n            <div class=\"product-item\">\r\n                <img class=\"img-prod-item\" :src=\"img\" alt=\"Картинка товара\">\r\n                <h3 class=\"title-prod-item\">{{ productItem.product_name }}</h3>\r\n                <p class=\"price-prod-item\">цена: {{ productItem.price }} у.е.</p>\r\n                <button class=\"buy-btn\" @click=\"$root.$refs.cart.addProduct(productItem)\">Купить</button>\r\n            </div>\r\n            `\r\n})\r\n\r\n\r\n// Vue.component('products', {\r\n//     props: ['products', 'img'],\r\n//     template: `<div class=\"products\">\r\n//                     <product v-for=\"thing of products\"\r\n//                     :key=\"thing.id_product\"\r\n//                     :img=\"img\"\r\n//                     :product=\"thing\"></product>\r\n//                 </div>\r\n//                 `\r\n// });\r\n\r\n// Vue.component('product', {\r\n//     props: ['product', 'img'],\r\n//     template: `<div class=\"product-item\">\r\n//                     <img class=\"img-product-item\" :src=\"img\" alt=\"Картинка товара\">\r\n//                     <h3 class=\"title-product-item\">{{product.product_name}}</h3>\r\n//                     <p class=\"price-product-item\">цена: {{product.price}} у.е.</p>\r\n//                     <button class=\"buy-btn\" @click=\"$parent.$emit('add-product', product)\">Купить</button>\r\n//                 `\r\n// });\n\n//# sourceURL=webpack://java_script_project/./public/js/productComponent.js?");

/***/ }),

/***/ "./public/js/searchComponent.js":
/*!**************************************!*\
  !*** ./public/js/searchComponent.js ***!
  \**************************************/
/***/ (() => {

eval("Vue.component('search', {\r\n    data() {\r\n        return {\r\n            userSearch: ''\r\n        }\r\n    },\r\n    template: `<form action=\"#\" class=\"search-form\" @submit.prevent=\"$parent.$refs.products.filter(userSearch)\">\r\n                <input type=\"text\" class=\"search-field\" placeholder=\"Поиск товаров\" v-model=\"userSearch\">\r\n                <button class=\"btn-search\" type=\"submit\">Нажми</button>\r\n                </form>`\r\n}) \r\n\r\n\r\n// data() {\r\n//     return {\r\n//         userSearch: ''\r\n//     }\r\n// },\r\n// template: `<form action = \"#\" class=\"search-form\" @submit.prevent=\"$parent.separation\">\r\n//             <input type=\"text\" class=\"search-field\" placeholder=\"Поиск товаров\" v-model=\"$parent.userSearch\">\r\n//             <button class=\"btn-search\" type=\"submit\">Нажми</button>\r\n//             </form>\r\n//             `\n\n//# sourceURL=webpack://java_script_project/./public/js/searchComponent.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./public/js/main.js"]();
/******/ 	__webpack_modules__["./public/js/basketComponent.js"]();
/******/ 	__webpack_modules__["./public/js/errorComponent.js"]();
/******/ 	__webpack_modules__["./public/js/searchComponent.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./public/js/productComponent.js"]();
/******/ 	
/******/ })()
;